import asyncio

from aiogram import Router
from aiogram.types import Message, CallbackQuery, ReplyKeyboardRemove

from keyboards.reply_keyboard import get_main_menu

router = Router()


@router.callback_query(lambda callback: callback.data == 'get_start_yes')
async def callback_get_start_yes(callback: CallbackQuery) -> None:
    await callback.answer(cache_time=3)

    await callback.message.answer(text='–ó–¥–æ—Ä–æ–≤–æ! –¢–æ–≥–¥–∞ —Å–º–æ—Ç—Ä–∏ –∫–∞–∫–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ —É –º–µ–Ω—è –µ—Å—Ç—åüòé',
                                  reply_markup=get_main_menu(),
                                  show_alert=True)


@router.callback_query(lambda callback: callback.data == 'menu')
async def callback_menu(callback: CallbackQuery) -> None:
    await callback.answer(cache_time=3)

    await callback.message.answer(text='–¢—ã –≤–µ—Ä–Ω—É–ª—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é!',
                                  reply_markup=get_main_menu())


@router.callback_query(lambda callback: callback.data == 'get_webapp')
async def callback_webapp(callback: CallbackQuery) -> None:
    # –ú–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –∫—Ä–µ—Å—Ç–∏–∫–∏ - –Ω–æ–ª–∏–∫–∏ –Ω–∞ Flask –∏ –ø–æ–¥–∫–ª—é—á–∏—Ç—å –µ–≥–æ —á–µ—Ä–µ–∑ WepApp
    await callback.answer(
        text="–ë–æ—Ç –≤ —Ä–µ–∂–∏–º–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è :(\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ",
        show_alert=True
    )


@router.callback_query(lambda callback: callback.data == "next")
async def callback_next(callback: CallbackQuery) -> None:
    await callback.message.answer(
        text='–ö—Ä—É—Ç–æ!',
        reply_markup=ReplyKeyboardRemove()
    )

    await asyncio.sleep(1)

    await callback.message.answer_sticker(r'CAACAgIAAxkBAAJRPWYgXHGrRK0scClk16r6DniETdxBAAIdGgACIucJSAe9y5A0RJZyNAQ')

    await callback.message.answer(f'–¢—ã –ø–æ—Å–º–æ—Ç—Ä–µ–ª –∫–∞–∫ —ç—Ç–æ—Ç –±–æ—Ç –≤—ã–≥–ª—è–¥–∏—Ç —Å–Ω–∞—Ä—É–∂–∏, '
                                  f'—Ç–µ–ø–µ—Ä—å –¥–∞–≤–∞–π –æ–∫—É–Ω–µ–º—Å—è –≤ –µ–≥–æ –∫–æ–¥!',
                                  reply_markup=ReplyKeyboardRemove())


@router.callback_query(lambda callback: callback.data == "test")
async def callback_test(callback: CallbackQuery) -> None:
    await callback.answer(
        text="–ù–∞–ø–∏—à–∏ –∫–æ–º–∞–Ω–¥—É /test",
        show_alert=True
    )


@router.callback_query()
async def any_callback(callback: CallbackQuery) -> None:
    await callback.answer(
        text="–ë–æ—Ç –≤ —Ä–µ–∂–∏–º–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è :(\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ",
        show_alert=True
    )
